{"version":3,"sources":["Components/Cars/CardCars.jsx","ErrorBoundary/ErrorBoundary.jsx","Components/Count/Count.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardCars","inputClasses","this","props","car","push","length","style","backgroundColor","cursor","className","year","color","join","type","onChange","onChangeName","value","onClick","onHandlerDel","React","Component","Radium","ErrorBoundary","state","hisError","error","info","setState","position","top","left","border","padding","children","Counter","onHandlePlus","prevState","console","log","counter","App","p","handlerToggleCards","toggleCard","onChangeHandler","e","titlePage","target","titleChangeHandler","newTitle","onHandlerName","name","index","cars","onDeleted","concat","splice","CardsCar","map","onChangeClick","event","bind","textAlign","marginRight","title","width","margin","Count","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8b9f8c8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../Cars/CardCars.scss\";\r\nimport Radium from \"radium\";\r\n\r\nclass CardCars extends React.Component {\r\n  // componentDidMount(){\r\n  //   console.log('componentDidMount');\r\n  // }\r\n  // shouldComponentUpdate(nexProps, nextState){\r\n  //   console.log('shouldComponentUpdate', nexProps);\r\n  //   return true\r\n  // }\r\n  // componentDidUpdate(nexProps, nextState){\r\n  //   console.log('componentDidUpdate',nexProps);\r\n  // }\r\n  // componentWillUnmount(nexProps, nextState){\r\n  //  console.log('componentWillUnmount',nextState);\r\n  // }\r\n\r\n  render() {\r\n    const inputClasses = [\"input\"];\r\n    // ====динамические классы===\r\n    if (this.props.car !== \"\") {\r\n      inputClasses.push(\"green\");\r\n    } else {\r\n      inputClasses.push(\"red\");\r\n    }\r\n\r\n    if (this.props.car.length > 4) {\r\n      inputClasses.push(\"blue\");\r\n    }\r\n    return (\r\n      <div\r\n        // ===radium===\r\n        style={{\r\n          \":hover\": { backgroundColor: \"lightBlue\" },\r\n          cursor: \"pointer\",\r\n        }}\r\n        className=\"Cars\"\r\n      >\r\n        <p className=\"cars-block\">\r\n          Car: <strong> {this.props.car}</strong>\r\n        </p>\r\n        <p>Year: {this.props.year}</p>\r\n        <p>Color: {this.props.color}</p>\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          type=\"text\"\r\n          onChange={this.props.onChangeName}\r\n          value={this.props.car}\r\n        />\r\n        <button onClick={this.props.onHandlerDel}>Delete</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Radium(CardCars);\r\n","// import { info } from \"node-sass\";\r\nimport React from \"react\";\r\n\r\nexport default class ErrorBoundary extends React.Component{\r\n    state={\r\n        hisError:false\r\n    }\r\n    componentDidCatch(error, info){\r\n        this.setState({\r\n            hisError:true\r\n        })\r\n    }\r\n    render(){\r\n        if(this.state.hisError){\r\n            return <> \r\n            <div className='error-main'>\r\n               \r\n            </div>\r\n             <h1 style={{color:'red', position:\"absolute\", top:'40%' , left:'40%',  border:'1px solid', padding:'50px 50px'}}>\r\n                    Ops this is error!\r\n                </h1>\r\n                </> \r\n        }\r\n        return this.props.children\r\n    }\r\n\r\n}","import React from \"react\";\r\n\r\nclass Counter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      counter: 0,\r\n    };\r\n  }\r\n  onHandlePlus = () => {\r\n    this.setState((prevState) => {\r\n      console.log(\"[prevState]\", prevState);\r\n      return {\r\n        counter: prevState.counter + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.counter === -1 || this.state.counter === 10) {\r\n      this.setState({\r\n        counter: 0,\r\n      });\r\n    }\r\n    return (\r\n      <>\r\n        <h1 key=\"1\">{this.state.counter}</h1>\r\n        <button key=\"2\" onClick={this.onHandlePlus}>\r\n          +\r\n        </button>\r\n        <button\r\n          key=\"3\"\r\n          onClick={() => this.setState({ counter: this.state.counter - 1 })}\r\n        >\r\n          -\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n\r\n  //     return [\r\n  //       <h1 key=\"1\">{this.state.counter}</h1>,\r\n  //       <button key=\"2\" onClick={this.onHandlePlus}>\r\n  //         +\r\n  //       </button>,\r\n  //       <button key=\"3\" onClick={this.onHandleMinuse}>\r\n  //         -\r\n  //       </button>,\r\n  //     ];\r\n  //   }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport CardCars from \"./Components/Cars/CardCars\";\nimport ErrorBoundary from \"./ErrorBoundary/ErrorBoundary\";\nimport Counter from \"./Components/Count/Count\";\n\nclass App extends Component {\n  constructor(p) {\n    super(p);\n    this.state = {\n      cars: [\n        { name: \"Maybah\", year: \"2021\", color: \"black\" },\n        { name: \"Ford\", year: \"2015\", color: \"blue\" },\n        { name: \"Audi\", year: \"2012\", color: \"grey\" },\n      ],\n      titlePage: \"Title of cars\",\n      toggleCard: false,\n    };\n  }\n\n  handlerToggleCards = () => {\n    this.setState({\n      toggleCard: !this.state.toggleCard,\n    });\n  };\n\n  // ====target-input====\n  onChangeHandler = (e) => {\n    this.setState({\n      titlePage: e.target.value,\n    });\n  };\n  // ====change-title====\n  titleChangeHandler = (newTitle) => {\n    this.setState({\n      titlePage: newTitle,\n    });\n  };\n\n  // ===onHandlerName===\n  onHandlerName = (name, index) => {\n    let car = this.state.cars[index];\n    car.name = name;\n    let cars = [...this.state.cars];\n    cars[index] = car;\n    this.setState({\n      cars: cars,\n    });\n  };\n\n  // =======\n  onDeleted = (index) => {\n    const cars = this.state.cars.concat();\n    cars.splice(index, 1);\n    this.setState({\n      cars: cars,\n    });\n  };\n\n  render() {\n    // 70% рандома ошибки\n    // if(Math.random()>0.7){\n    //   throw new Error('Car random failed')\n    // }\n    const divStyle = {\n      textAlign: \"center\",\n      padding: \"10px\",\n      marginRight: \"10px\",\n    };\n    // ======\n    let CardsCar = this.state.toggleCard\n      ? this.state.cars.map((car, index) => {\n          return (\n            <ErrorBoundary key={index}>\n              <CardCars\n                onChangeClick={() => this.titleChangeHandler(car.name)}\n                car={car.name}\n                year={car.year}\n                color={car.color}\n                onChangeName={(event) =>\n                  this.onHandlerName(event.target.value, index)\n                }\n                onHandlerDel={this.onDeleted.bind(this, index)}\n              />\n            </ErrorBoundary>\n          );\n        })\n      : null;\n\n    return (\n      <div style={divStyle}>\n        {/* <h1 onClick={this.titleChangeHandler.bind(this, \"Changed!\")}>\n          {this.state.titlePage}\n        </h1> */}\n        <h1>{this.props.title}</h1>\n        <button onClick={this.handlerToggleCards}>Toggle Btn</button>\n        <br />\n        <br />\n        <div className=\"card-car\">\n          <div className=\"card-item\" style={{ width: 400, margin: \"auto\" }}>\n            {CardsCar}\n          </div>\n        </div>\n        {<Counter />}\n        {<Counter />}\n        {<Counter />}\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary key={1}>\n    <App title={'this is p title'}/>\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}